#!/bin/bash
set -o nounset
set -o errexit

export PATH=$PATH:/usr/sbin:/sbin:/usr/bin:/bin:/usr/local/bin/

function info { echo -e "$( date +%T )" "\033[1;33m  $1\033[0m"; }
function ok { echo -e "$( date +%T )" "\033[1;32m  $1\033[0m"; }
function error { echo -e "$( date +%T )" "\033[1;31m  Error: $1\033[0m"; }
function die { error "$1"; exit 1; }

function main {
	GO_USER="{{ sansible_gocd_server_user }}"
	BACKUP_BUCKET="{{ sansible_gocd_server_aws_backup_bucket }}"
	GO_DB_PATH="/home/${GO_USER}/work/go-server/db"
	ARTIFACTS_DIR="/home/${GO_USER}/work/go-server/artifacts/pipelines"
	: "${AWS_DEFAULT_REGION:=eu-west-1}"

	export AWS_DEFAULT_REGION

	info "Checking backups exist"

	BACKUP_CHECK="$( aws s3 ls "${BACKUP_BUCKET}"/config | wc -l )"

	if [[ ${BACKUP_CHECK} -eq 0 ]]; then
		info "No backups found, skipping"
		exit 0
	fi

	info "Stopping Go Server"

{% if ansible_service_mgr == "systemd" -%}
	sudo systemctl stop go-server
{% else -%}
	service go-server stop
{% endif %}

	info "Synchronising artifacts"
	mkdir -p "${ARTIFACTS_DIR}"
	aws s3 sync \
		"${BACKUP_BUCKET}"/pipelines \
		"${ARTIFACTS_DIR}" \
		 || die "Failed to synchronise artifacts"
	ok "Pipelines artifacts synchronised"

	info "Starting Go Server"

{% if ansible_service_mgr == "systemd" -%}
	sudo systemctl start go-server
{% else -%}
	service go-server start
{% endif %}

}

main "$@"
