#!/bin/bash
set -o nounset
set -o errexit

export PATH=$PATH:/usr/sbin:/sbin:/usr/bin:/bin:/usr/local/bin/

function info { echo -e "$( date +%T )" "\033[1;33m  $1\033[0m"; }
function ok { echo -e "$( date +%T )" "\033[1;32m  $1\033[0m"; }
function error { echo -e "$( date +%T )" "\033[1;31m  Error: $1\033[0m"; }
function die { error "$1"; exit 1; }

function main {
	GO_USER="{{ sansible_gocd_server_user }}"
	BACKUP_BUCKET="{{ sansible_gocd_server_aws_backup_bucket }}"
	BACKUP_CREDS="{{ sansible_gocd_server_backup_user }}:{{ sansible_gocd_server_backup_passwd }}"
	ARTIFACTS_DIR="/home/${GO_USER}/work/go-server/artifacts/pipelines"
	SERVER="http://localhost:{{ sansible_gocd_server_port }}"
	: "${AWS_DEFAULT_REGION:=eu-west-1}"

	export AWS_DEFAULT_REGION

	info "Starting backup"
	response="$( curl -f \
		-sS \
		-u "${BACKUP_CREDS}" \
		-H 'Accept: application/vnd.go.cd.v1+json' \
		-H 'Confirm: true' \
		-X POST \
		"${SERVER}"/go/api/backups )"
	if [ $? -ne 0 ]; then
		die "Backup error"
	else
		ok "Backup finished!"
	fi

	backup_path="$( echo "${response}" | jq -r '.["path"]' )"
	backup_folder="$( basename "${backup_path}" )"
	backup_dir="$( dirname "${backup_path}" )"

	info "Preparing ${backup_dir}/${backup_folder}.tar.gz";
	cd "${backup_dir}"
	tar -cz \
		-f "${backup_folder}".tar.gz \
		--remove-files \
		"${backup_folder}" \
	 	|| die "tar error"
	 ok "ok"

	info "Uploading ${backup_folder}.tar.gz"
	aws s3 mv \
		"${backup_dir}"/"${backup_folder}".tar.gz \
		"${BACKUP_BUCKET}"/config/ \
		|| die "Failed"
	ok "UPLOADED!"

	info "Uploading latest.tar.gz"
	aws s3 cp \
		"${BACKUP_BUCKET}"/config/"${backup_folder}".tar.gz \
		"${BACKUP_BUCKET}"/config/latest.tar.gz \
		|| die "Failed"
	ok "UPLOADED!"

	info "Synchronising artifacts"
	aws s3 sync \
		--delete \
		"${ARTIFACTS_DIR}" \
		"${BACKUP_BUCKET}"/pipelines \
		|| die "Failed to synchronise artifacts"
	ok "Pipelines artifacts synchronised"
}

main "$@"
